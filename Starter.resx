<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAMIOAADCDgAAAAEAAAAB
        AADNzf8AzMz+AMbG9wDExPQAxcX0AMrJ+ADKyfkAy8r7AMvM/QDDxPEAysjwANHJ7wDTyu8A0MnvAM3I
        8QDLyfgAzM3/AMvL/QDDxvUAu9D1AM3S8gDX0vEA3NTyANrS8QDa0/IAzcr1AMXF9QDDzPQAq9z1AHmL
        0wB7dMgAkovRAHBowwB0bMUAlpDTAHBougCQi78A19HtAMzJ9QDJyfoAxsXyANXQ8QCutOMATUq3AFZM
        uAByasQARjyxAEtBtAB1bsAAODCFACsmZACzrdYA1s7xAMvK+QDLx/AA29LyAKKd2gBLQ7QAXVO5AHlv
        wgBMQrQAUUe2AHlxuwAzLWwALihpAKuk2ADb0fIAzMjyAMfG9gDQye4A3NLyALex4QB4cccAiH3EAJ6P
        wwB4cMEAfHO/AKOUxAB+dcIAeXLFAL+55QDLy/wA0sruAN3T8wChmtgAS0K0AF5VuQB2bboAPTWOADcx
        cgB3bqkAVEq3AE5FtQCup94A3NLzANLK7wDKyvoAy8r6AJ+X1wBZT7kAb2e2ACokbAAiHU4Aa2WjAE1D
        tgBJP7IArKTdALGr3wBrY70AfnO9AJeJwQBoYLAAamKqAJmLwQB0a8EAcGjEALu15ADPye8AyMf4AKSe
        0ABJQ4sAWFGIAIF3uABfVr0AZFq9AIyAwABZUaEATUeRAK6o0ADb0fMAxcb2AMvK+ADY0PIAnpm+ACUf
        YQAxLF4Aa2S2AEY7sgBKQLQAcWq3ACwmagAmIVsAqqXCANfP8wDHxfQAycr7AM7K9QDSzOgAgXy2AGtl
        qgCLhc0AaWHAAG1lwgCPicsAWVOPAH56nADUzugAy8fzAMfH+ADPy/UA2NHxANjP8QDZ0fEA1s7wANfP
        8QDZ0vMAy8jyAMzM/QDRye4A08vvAMzH8ADLy/sAycj3AMTD8QDExPIAxMX1AP///wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAABq6ytrq8nAQAAAAAAAAAPDqgMqQuqKBoRAAAAAAGfoKGio6MXpKWmGqcAAACSk5SV
        lpeYmZqbnJ2eAACDhIWGh4iJiouMjY6PkJEQDkZ3eHl6e3x9fn+AgTaCUUVGa2xtbm9wcXJzdEJ1dmFS
        U2IuY2RlZmdoaWpeX2E1UlNUVVZXWFlaW1xdXl9gREVGR0hJSktMTU5PUEINUQI2Nzg5Ojs8PT4/QEFC
        QxAnKCkqKywtLi8wMTIzNDUAABobHB0eHyAhIiMkJSYAAAAREhMUFRYXFxYXGBkBAAAAAAgDCQoLDAwN
        Dg8QAAAAAAAAAQIDBAUGBwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>